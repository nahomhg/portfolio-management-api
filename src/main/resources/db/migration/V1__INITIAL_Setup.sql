-- USERS
CREATE TABLE IF NOT EXISTS users (
                                     id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     enabled BOOLEAN NOT NULL,
                                     verification_expiration TIMESTAMPTZ,
                                     email VARCHAR(255) NOT NULL CONSTRAINT users_email_uq UNIQUE,
                                     password VARCHAR(255) NOT NULL,
                                     username VARCHAR(255) NOT NULL CONSTRAINT users_username_uq UNIQUE,
                                     verification_code VARCHAR(255)
);

-- HOLDINGS
CREATE TABLE IF NOT EXISTS holdings (
                                        id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                        avg_cost_basis NUMERIC(38,8),
                                        total_cost_basis NUMERIC(38,8),
                                        units NUMERIC(38,8) NOT NULL CHECK (units >= 0),
                                        user_id BIGINT NOT NULL,
                                        asset VARCHAR(255) NOT NULL,
                                        version BIGINT DEFAULT 0 NOT NULL,
                                        CONSTRAINT holdings_asset_user_uq UNIQUE (asset, user_id),
                                        CONSTRAINT holdings_user_fk FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS idx_holding_user_id ON holdings (user_id);


-- TRANSACTIONS
CREATE TABLE IF NOT EXISTS transactions (
                                            id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                            total_price NUMERIC(38,8) NOT NULL,
                                            price_per_unit NUMERIC(38,8) NOT NULL,
                                            units NUMERIC(38,8) NOT NULL CHECK (units >= 0),
                                            txn_timestamp TIMESTAMPTZ NOT NULL,
                                            txn_type VARCHAR(16) NOT NULL,
                                            asset_name VARCHAR(128) NOT NULL,
                                            client_idempotency_key VARCHAR(75) NOT NULL,
                                            user_id BIGINT NOT NULL,
                                            holding_id BIGINT,
                                            CONSTRAINT transactions_txn_type_ck CHECK (txn_type IN ('BUY', 'SELL')),
                                            CONSTRAINT fk_holding_id FOREIGN KEY (holding_id) REFERENCES holdings(id) ON DELETE CASCADE,
                                            CONSTRAINT transactions_user_fk FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
                                            CONSTRAINT transactions_user_idem_uq UNIQUE (user_id, client_idempotency_key)
);

-- Indexes for query performance
CREATE INDEX IF NOT EXISTS idx_txn_user_time ON transactions (user_id, txn_timestamp DESC);
CREATE INDEX IF NOT EXISTS idx_txn_user_asset ON transactions (user_id, asset_name);
CREATE INDEX IF NOT EXISTS idx_txn_external_id ON transactions (client_idempotency_key);

-- PORTFOLIOS
CREATE TABLE IF NOT EXISTS portfolios (
                                          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                          created_at TIMESTAMPTZ NOT NULL,
                                          user_id BIGINT NOT NULL,
                                          portfolio_type VARCHAR(255),
                                          total_invested NUMERIC(38,8),
                                          total_valuation NUMERIC(38,8),
                                          total_pnl NUMERIC(38,8),
                                        last_updated TIMESTAMPTZ NOT NULL,
                                        CONSTRAINT portfolios_type_ck CHECK (portfolio_type IN ('MAIN_PORTFOLIO','RETIREMENT','HIGH_RISK_PORTFOLIO')),
                                        CONSTRAINT portfolios_type_user_uq UNIQUE (portfolio_type, user_id),
                                        CONSTRAINT portfolios_user_fk FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);


CREATE INDEX IF NOT EXISTS idx_portfolio_user_id ON portfolios (user_id);

